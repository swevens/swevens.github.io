{"version":3,"sources":["webpack:///./src/components/atoms/ToggleButton/toggle.css","webpack:///./src/components/atoms/ToggleButton/index.js","webpack:///./src/components/organisms/StepB/index.js","webpack:///./src/components/molecules/ToggleButton/index.js"],"names":["module","exports","__webpack_require__","push","i","version","sources","names","mappings","file","sourcesContent","sourceRoot","PropTypes","bool","func","isRequired","string","object","_react2","default","createElement","_Icon2","type","height","width","ToggleButton","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","getIcon","bind","onKeyUp","React","Component","e","preventDefault","keyCode","onToggle","on","_ref","_props","className","classes","styles","switch","join","tabIndex","onClick","switchToggle","defaultProps","enabled","_formik","Yup","_reactRedux","_common","_actionTypes","StepB","onCountrySelected","stepBState","address","country","setTouched","country1","country2","date1","date2","return","setFieldValue","name","value","Fragment","_Header2","backAction","previousStep","titles","getSectionTitles","progressPercentage","_ToggleButton2","onChange","values","returning","label","labelLeft","_Select2","options","getCountries","placeholder","isOptional","searchable","showIcons","error","errors","touched","onBlur","setFieldTouched","inputMaxLength","_Input2","handleChange","maxlength","_Button2","variation","key","submitForm","isValid","connect","state","views","stepB","withFormik","mapPropsToValues","validationSchema","shape","required","date","min","Date","toISOString","when","schema","test","notRequired","handleSubmit","dispatch","SET_STEPB_CONTENT","payload","gotoView","window","lastTouched","onDisabledClick"],"mappings":"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","file":"6.bundle.b704fadd315eb1b8a62c.js","sourcesContent":["exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \".switch{border:none;width:44px;height:20px;border-radius:12px;cursor:pointer;display:inline-block;background-color:#2b364c}.switch.disabled{cursor:not-allowed}.switch.on>.switchToggle{background:#0d54e1;left:24px}.switchToggle{border:none;width:20px;height:20px;left:0;border-radius:12px;background:#fff;position:relative;transition:left .2s ease-in-out}\", \"\", {\"version\":3,\"sources\":[\"/Users/tarsingh4/Git/code/swevens/git/formik-yup-react-forms/formik-up-react-forms/src/components/atoms/ToggleButton/toggle.css\"],\"names\":[],\"mappings\":\"AAAA,QACI,YAAY,AACZ,WAAW,AACX,YAAY,AACZ,mBAAmB,AACnB,eAAe,AACf,qBAAqB,AACrB,wBAAyB,CAC5B,AACD,iBAEE,kBAAmB,CACpB,AACD,yBAEI,mBAAmB,AACnB,SAAU,CACb,AACD,cACI,YAAY,AACZ,WAAW,AACX,YAAY,AACZ,OAAO,AACP,mBAAmB,AACnB,gBAAiB,AACjB,kBAAkB,AAClB,+BAAgC,CACnC\",\"file\":\"toggle.css\",\"sourcesContent\":[\".switch {\\n    border: none;\\n    width: 44px;\\n    height: 20px;\\n    border-radius: 12px;\\n    cursor: pointer;\\n    display: inline-block;\\n    background-color: #2b364c;\\n}\\n.switch.disabled\\n{\\n  cursor: not-allowed;\\n}\\n.switch.on > .switchToggle\\n{\\n    background: #0d54e1;\\n    left: 24px;\\n}\\n.switchToggle {\\n    border: none;\\n    width: 20px;\\n    height: 20px;\\n    left: 0;\\n    border-radius: 12px;\\n    background: white;\\n    position: relative;\\n    transition: left .2s ease-in-out;\\n}\"],\"sourceRoot\":\"\"}]);\n\n// exports\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Icon from '../Icon';\nimport styles from './toggle.css';\n\nconst propTypes = {\n  on: PropTypes.bool,\n  onToggle: PropTypes.func.isRequired,\n  enabled: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.object\n};\n\nconst defaultProps = {\n  enabled: true,\n  className: '',\n};\n\nclass ToggleButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getIcon = this.getIcon.bind(this);\n    this.onKeyUp = this.onKeyUp.bind(this);\n  }\n\n  onKeyUp(e) {\n    e.preventDefault();\n  if (e.keyCode === 13) {\n      this.props.onToggle();\n    }\n  }\n\n  getIcon() {\n    return (this.props.on ? <Icon type=\"toggleEnabled\" height=\"20\" width=\"20\" /> : '' )\n  }\n\n  render() {\n    const {on, onToggle, className} = this.props;\n    const classes = [styles.switch, className, (on ? styles.on : '')].join(' ');\n    return (\n      <a className={classes} tabIndex=\"0\" onClick={(e) => {onToggle(e)}} onKeyUp={this.onKeyUp}>\n        <div className={styles.switchToggle} >{this.getIcon()}</div>\n      </a>\n    );\n  }\n}\n\nToggleButton.propTypes = propTypes;\nToggleButton.defaultProps = defaultProps;\n\nexport default ToggleButton;","/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { connect } from \"react-redux\";\n\nimport Select from \"../../molecules/Select\";\nimport Input from \"../../molecules/Input\";\nimport Button from \"../../atoms/Button\";\nimport Header from \"../../molecules/Header\";\nimport { getCountries, getSectionTitles } from \"../../../utils/common\";\nimport { SET_STEPB_CONTENT } from \"../../../constants/actionTypes\";\nimport ToggleButton from \"../../molecules/ToggleButton\";\n\n\nclass StepB extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onCountrySelected = this.onCountrySelected.bind(this);    \n  }\n\n  componentDidMount() {\n    if (this.props.stepBState.address && this.props.stepBState.country) {\n      this.props.setTouched({ country1: true, country2: true, date1: true, date2: true, return: true });\n      this.props.setFieldValue(\"country1\", this.props.stepBState.country1, true);\n      this.props.setFieldValue(\"country2\", this.props.stepBState.country2, true);\n      this.props.setFieldValue(\"date1\", this.props.stepBState.date1, true);\n      this.props.setFieldValue(\"date2\", this.props.stepBState.date2, true);\n      this.props.setFieldValue(\"return\", this.props.stepBState.return, true);\n    }\n  }\n\n  onCountrySelected(name, value) {\n    this.props.setFieldValue(name, value);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header\n          backAction={this.props.previousStep}\n          titles={getSectionTitles[\"StepB\"]}\n          progressPercentage={40}\n        />\n        <section className=\"grid-container\">\n          <div className=\"grid-x m2\">\n            <div className=\"small-6 m2 small-offset-3\">\n              <ToggleButton\n                onChange={this.props.setFieldValue}\n                name=\"returning\"\n                value={this.props.values.returning}\n                label={\"Return\"}\n                labelLeft={\"One Way\"}\n              />\n            </div>\n          </div>\n          <div className=\"grid-x m2\">\n            <div className=\"small-6 small-offset-3\">\n              <Select\n                options={getCountries()}\n                label={\"\"}\n                name={\"country1\"}\n                placeholder={\"Boarding From:\"}\n                isOptional={false}\n                searchable={true}\n                showIcons={false}\n                error={this.props.errors.country1}\n                value={this.props.values.country1}\n                touched={this.props.touched.country1}\n                onBlur={this.props.setFieldTouched}\n                onChange={this.onCountrySelected}\n                inputMaxLength={50}\n              />\n            </div>\n          </div>\n          <div className=\"grid-x m2\">\n            <div className=\"small-6 small-offset-3\">\n              <Select\n                options={getCountries()}\n                label={\"\"}\n                name={\"country2\"}\n                placeholder={\"Travelling to:\"}\n                isOptional={false}\n                searchable={true}\n                showIcons={false}\n                error={this.props.errors.country2}\n                value={this.props.values.country2}\n                touched={this.props.touched.country2}\n                onBlur={this.props.setFieldTouched}\n                onChange={this.onCountrySelected}\n                inputMaxLength={50}\n              />\n            </div>\n          </div>\n          <div className=\"grid-x m2\">\n            <div className=\"small-3 small-offset-3\">\n              <div className=\"panel\">\n                <Input\n                  name=\"date1\"\n                  type=\"date\"\n                  label=\"departure\"\n                  value={this.props.values.date1}\n                  error={this.props.errors.date1}\n                  touched={this.props.touched.date1}\n                  onBlur={this.props.setFieldTouched}\n                  onChange={this.props.handleChange}\n                  placeholder=\"Depart:\"\n                  isOptional={false}\n                  maxlength={16}\n                />\n              </div>\n            </div>\n            <div className=\"small-3\">\n            <div className=\"panel\">\n              {this.props.values.returning && <Input\n                name=\"date2\"\n                type=\"date\"\n                label=\"Return\"\n                value={this.props.values.date2}\n                error={this.props.errors.date2}\n                touched={this.props.touched.date2}\n                onBlur={this.props.setFieldTouched}\n                onChange={this.props.handleChange}\n                placeholder=\"Return:\"\n                isOptional={false}\n                maxlength={16}\n              />}\n              </div>\n            </div>\n          </div>\n          <div className=\"grid-x\">\n            <div className=\"small-12  text-center\">\n              <Button\n                variation=\"flat\"\n                key=\"continue\"\n                onClick={this.props.submitForm}\n                className={this.props.isValid ? \"\" : \"invalid\"}\n              >\n                Next\n              </Button>\n            </div>\n          </div>\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nStepB.propTypes = {\n  gotoView: PropTypes.func,\n  previousStep: PropTypes.func,\n  errors: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  touched: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  values: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  setFieldTouched: PropTypes.func,\n  setFieldValue: PropTypes.func,\n  handleChange: PropTypes.func,\n  submitForm: PropTypes.func,\n  isValid: PropTypes.bool,\n  stepBState: PropTypes.object,\n  setTouched: PropTypes.func,\n  dirty: PropTypes.bool,\n  dispatch: PropTypes.func\n};\n\nfunction mapStateToProps(state) {\n  return {\n    stepBState: state.views.stepB\n  };\n}\n\nexport default connect(mapStateToProps)(\n  withFormik({\n    mapPropsToValues: props => ({\n      country1: \"AU\",\n      country2: \"\",\n      date1: \"\",\n      date2: \"\",\n      returning: true\n    }),\n    validationSchema: Yup.object().shape({\n      country1: Yup.string().required(\"Required\"),\n      country2: Yup.string().required(\"Required\"),\n      date1: Yup.date().required(\"Required\").min(new Date().toISOString(), '**Less than today?'),\n      date2: Yup.date().when([\"date1\",\"returning\"], (date1, returning, schema) => {\n        return returning\n          ? schema.required(\"Required\").test('datecheck','**Less than Start?', (value) => {return value >= date1}) : schema.notRequired()\n      })\n    }),\n    handleSubmit: (values, { props }) => {\n      props.dispatch({\n        type: SET_STEPB_CONTENT,\n        payload: {\n          country1: values.country1,\n          country2: values.country2,\n          date1: values.date1,\n          date2: values.date2,\n          return: values.return\n        }\n      });\n      props.gotoView(\"StepC\");\n    }\n  })(StepB)\n);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Atom from '../../atoms/ToggleButton'\n\nconst propTypes = {\n  onChange: PropTypes.func.isRequired,\n  enabled: PropTypes.bool,\n  name: PropTypes.string,\n  value: PropTypes.bool,\n  label: PropTypes.string,\n  labelLeft: PropTypes.string\n};\n\nconst defaultProps = {\n  enabled: true,\n  onDisabledClick: () => {}\n};\n\nclass ToggleButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange() {\n    window.lastTouched = this.props.name;\n    this.props.onChange(this.props.name, !this.props.value);\n  }\n\n  render() {\n    return (\n      <div className=\"flex-container align-right align-middle\">\n        {this.props.labelLeft ? <span className=\"mr1\">{this.props.labelLeft}</span> : '' }\n        <Atom onToggle={this.onChange} on={this.props.value} name={this.props.name} />\n        {this.props.label ? <span className=\"ml1\">{this.props.label}</span> : '' }\n      </div>\n    );\n  }\n}\n\nToggleButton.propTypes = propTypes;\nToggleButton.defaultProps = defaultProps;\n\nexport default ToggleButton;"],"sourceRoot":""}