{"version":3,"sources":["webpack:///./src/components/organisms/StepE/index.js","webpack:///./src/utils/common.js"],"names":["__webpack_require__","_reactRedux","_common","StepE","props","_classCallCheck","this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","React","Component","c1","c2","d","getCountryName","stepBState","getjourneyDetails","country1","country2","date1","date2","_props","stepAState","stepCState","stepDState","_react2","default","createElement","Fragment","_Header2","backAction","titles","getSectionTitles","progressPercentage","className","Date","now","firstname","lastname","return","getReturnDetails","getOnewayDetails","connect","state","views","stepA","stepB","getCountries","value","label","code","filter","item","getMonths","Array","apply","map","val","i","getYears","y","getFullYear","toString","getTitles","StepA","stepTitle","subTitle","StepB","StepC","StepD"],"mappings":"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","file":"3.bundle.85c249920f4fb35084b7.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from \"react\";\nimport Header from \"../../molecules/Header\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getSectionTitles, getCountryName } from \"../../../utils/common\";\n\nclass StepE extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getjourneyDetails(c1, c2, d) {\n    return ` from ${getCountryName(c1)} to ${getCountryName(c2)} on \n    ${d}`;\n  }\n\n  getOnewayDetails(stepBState) {\n    return `${this.getjourneyDetails(\n      stepBState.country1,\n      stepBState.country2,\n      stepBState.date1\n    )}.`;\n  }\n  getReturnDetails(stepBState) {\n    return `${this.getjourneyDetails(\n      stepBState.country1,\n      stepBState.country2,\n      stepBState.date1\n    )} & ${this.getjourneyDetails(\n      stepBState.country1,\n      stepBState.country2,\n      stepBState.date2\n    )}.`;\n  }\n\n  render() {\n    const { stepAState, stepBState, stepCState, stepDState } = this.props;\n    return (\n      <React.Fragment>\n        <Header\n          backAction={false}\n          titles={getSectionTitles[\"StepE\"]}\n          progressPercentage={100}\n        />\n        <section className=\"grid-container\">\n          <div className=\"grid-x m2\">\n            <div className=\"small-6 m2 small-offset-3\">\n              Your Booking is confirmed. Booking Ref: <b>{Date.now()}</b>.\n              Booked for <b>{stepAState.firstname} {stepAState.lastname}</b>,\n              {stepBState.return\n                ? this.getReturnDetails(stepBState)\n                : this.getOnewayDetails(stepBState)}\n            </div>\n          </div>\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    stepAState: state.views.stepA,\n    stepBState: state.views.stepB\n  };\n}\n\nStepE.propTypes = {\n  stepAState: PropTypes.func,\n  stepBState: PropTypes.func,\n  stepCState: PropTypes.func,\n  stepDState: PropTypes.func,\n  stepEState: PropTypes.func\n};\nexport default connect(mapStateToProps)(StepE);\n","export const getCountries = () => {\n  return [\n    { value: \"AF\", label: \"Afghanistan\" },\n    { value: \"AX\", label: \"Aland Islands\" },\n    { value: \"AL\", label: \"Albania\" },\n    { value: \"DZ\", label: \"Algeria\" },\n    { value: \"AS\", label: \"American Samoa\" },\n    { value: \"AD\", label: \"Andorra\" },\n    { value: \"AO\", label: \"Angola\" },\n    { value: \"AI\", label: \"Anguilla\" },\n    { value: \"AQ\", label: \"Antarctica\" },\n    { value: \"AG\", label: \"Antigua and Barbuda\" },\n    { value: \"AR\", label: \"Argentina\" },\n    { value: \"AM\", label: \"Armenia\" },\n    { value: \"AW\", label: \"Aruba\" },\n    { value: \"AU\", label: \"Australia\" },\n    { value: \"AT\", label: \"Austria\" },\n    { value: \"AZ\", label: \"Azerbaijan\" },\n    { value: \"BS\", label: \"Bahamas\" },\n    { value: \"BH\", label: \"Bahrain\" },\n    { value: \"BD\", label: \"Bangladesh\" },\n    { value: \"BB\", label: \"Barbados\" },\n    { value: \"BY\", label: \"Belarus\" },\n    { value: \"BE\", label: \"Belgium\" },\n    { value: \"BZ\", label: \"Belize\" },\n    { value: \"BJ\", label: \"Benin\" },\n    { value: \"BM\", label: \"Bermuda\" },\n    { value: \"BT\", label: \"Bhutan\" },\n    { value: \"BO\", label: \"Bolivia\" },\n    { value: \"BA\", label: \"Bosnia and Herzegovina\" },\n    { value: \"BW\", label: \"Botswana\" },\n    { value: \"BV\", label: \"Bouvet Island\" },\n    { value: \"BR\", label: \"Brazil\" },\n    { value: \"IO\", label: \"British Indian Ocean Territory\" },\n    { value: \"VG\", label: \"British Virgin Islands\" },\n    { value: \"BN\", label: \"Brunei\" },\n    { value: \"BG\", label: \"Bulgaria\" },\n    { value: \"BF\", label: \"Burkina Faso\" },\n    { value: \"BI\", label: \"Burundi\" },\n    { value: \"KH\", label: \"Cambodia\" },\n    { value: \"CM\", label: \"Cameroon\" },\n    { value: \"CA\", label: \"Canada\" },\n    { value: \"CV\", label: \"Cape Verde\" },\n    { value: \"BQ\", label: \"Caribbean Netherlands\" },\n    { value: \"KY\", label: \"Cayman Islands\" },\n    { value: \"CF\", label: \"Central African Republic\" },\n    { value: \"TD\", label: \"Chad\" },\n    { value: \"CL\", label: \"Chile\" },\n    { value: \"CN\", label: \"China\" },\n    { value: \"CX\", label: \"Christmas Island\" },\n    { value: \"CC\", label: \"Cocos (Keeling) Islands\" },\n    { value: \"CO\", label: \"Colombia\" },\n    { value: \"KM\", label: \"Comoros\" },\n    { value: \"CG\", label: \"Congo (Brazzaville)\" },\n    { value: \"CD\", label: \"Congo (Kinshasa)\" },\n    { value: \"CK\", label: \"Cook Islands\" },\n    { value: \"CR\", label: \"Costa Rica\" },\n    { value: \"HR\", label: \"Croatia\" },\n    { value: \"CU\", label: \"Cuba\" },\n    { value: \"CW\", label: \"Curaçao\" },\n    { value: \"CY\", label: \"Cyprus\" },\n    { value: \"CZ\", label: \"Czech Republic\" },\n    { value: \"DK\", label: \"Denmark\" },\n    { value: \"DJ\", label: \"Djibouti\" },\n    { value: \"DM\", label: \"Dominica\" },\n    { value: \"DO\", label: \"Dominican Republic\" },\n    { value: \"EC\", label: \"Ecuador\" },\n    { value: \"EG\", label: \"Egypt\" },\n    { value: \"SV\", label: \"El Salvador\" },\n    { value: \"GQ\", label: \"Equatorial Guinea\" },\n    { value: \"ER\", label: \"Eritrea\" },\n    { value: \"EE\", label: \"Estonia\" },\n    { value: \"ET\", label: \"Ethiopia\" },\n    { value: \"FK\", label: \"Falkland Islands\" },\n    { value: \"FO\", label: \"Faroe Islands\" },\n    { value: \"FJ\", label: \"Fiji\" },\n    { value: \"FI\", label: \"Finland\" },\n    { value: \"FR\", label: \"France\" },\n    { value: \"GF\", label: \"French Guiana\" },\n    { value: \"PF\", label: \"French Polynesia\" },\n    { value: \"TF\", label: \"French Southern Territories\" },\n    { value: \"GA\", label: \"Gabon\" },\n    { value: \"GM\", label: \"Gambia\" },\n    { value: \"GE\", label: \"Georgia\" },\n    { value: \"DE\", label: \"Germany\" },\n    { value: \"GH\", label: \"Ghana\" },\n    { value: \"GI\", label: \"Gibraltar\" },\n    { value: \"GR\", label: \"Greece\" },\n    { value: \"GL\", label: \"Greenland\" },\n    { value: \"GD\", label: \"Grenada\" },\n    { value: \"GP\", label: \"Guadeloupe\" },\n    { value: \"GU\", label: \"Guam\" },\n    { value: \"GT\", label: \"Guatemala\" },\n    { value: \"GG\", label: \"Guernsey\" },\n    { value: \"GN\", label: \"Guinea\" },\n    { value: \"GW\", label: \"Guinea-Bissau\" },\n    { value: \"GY\", label: \"Guyana\" },\n    { value: \"HT\", label: \"Haiti\" },\n    { value: \"HM\", label: \"Heard Island and McDonald Islands\" },\n    { value: \"HN\", label: \"Honduras\" },\n    { value: \"HK\", label: \"Hong Kong S.A.R.\" },\n    { value: \"HU\", label: \"Hungary\" },\n    { value: \"IS\", label: \"Iceland\" },\n    { value: \"IN\", label: \"India\" },\n    { value: \"ID\", label: \"Indonesia\" },\n    { value: \"IR\", label: \"Iran\" },\n    { value: \"IQ\", label: \"Iraq\" },\n    { value: \"IE\", label: \"Ireland\" },\n    { value: \"IM\", label: \"Isle of Man\" },\n    { value: \"IL\", label: \"Israel\" },\n    { value: \"IT\", label: \"Italy\" },\n    { value: \"CI\", label: \"Ivory Coast\" },\n    { value: \"JM\", label: \"Jamaica\" },\n    { value: \"JP\", label: \"Japan\" },\n    { value: \"JE\", label: \"Jersey\" },\n    { value: \"JO\", label: \"Jordan\" },\n    { value: \"KZ\", label: \"Kazakhstan\" },\n    { value: \"KE\", label: \"Kenya\" },\n    { value: \"KI\", label: \"Kiribati\" },\n    { value: \"KW\", label: \"Kuwait\" },\n    { value: \"KG\", label: \"Kyrgyzstan\" },\n    { value: \"LA\", label: \"Laos\" },\n    { value: \"LV\", label: \"Latvia\" },\n    { value: \"LB\", label: \"Lebanon\" },\n    { value: \"LS\", label: \"Lesotho\" },\n    { value: \"LR\", label: \"Liberia\" },\n    { value: \"LY\", label: \"Libya\" },\n    { value: \"LI\", label: \"Liechtenstein\" },\n    { value: \"LT\", label: \"Lithuania\" },\n    { value: \"LU\", label: \"Luxembourg\" },\n    { value: \"MO\", label: \"Macao S.A.R.\" },\n    { value: \"MK\", label: \"Macedonia\" },\n    { value: \"MG\", label: \"Madagascar\" },\n    { value: \"MW\", label: \"Malawi\" },\n    { value: \"MY\", label: \"Malaysia\" },\n    { value: \"MV\", label: \"Maldives\" },\n    { value: \"ML\", label: \"Mali\" },\n    { value: \"MT\", label: \"Malta\" },\n    { value: \"MH\", label: \"Marshall Islands\" },\n    { value: \"MQ\", label: \"Martinique\" },\n    { value: \"MR\", label: \"Mauritania\" },\n    { value: \"MU\", label: \"Mauritius\" },\n    { value: \"YT\", label: \"Mayotte\" },\n    { value: \"MX\", label: \"Mexico\" },\n    { value: \"FM\", label: \"Micronesia\" },\n    { value: \"MD\", label: \"Moldova\" },\n    { value: \"MC\", label: \"Monaco\" },\n    { value: \"MN\", label: \"Mongolia\" },\n    { value: \"ME\", label: \"Montenegro\" },\n    { value: \"MS\", label: \"Montserrat\" },\n    { value: \"MA\", label: \"Morocco\" },\n    { value: \"MZ\", label: \"Mozambique\" },\n    { value: \"MM\", label: \"Myanmar\" },\n    { value: \"NA\", label: \"Namibia\" },\n    { value: \"NR\", label: \"Nauru\" },\n    { value: \"NP\", label: \"Nepal\" },\n    { value: \"NL\", label: \"Netherlands\" },\n    { value: \"AN\", label: \"Netherlands Antilles\" },\n    { value: \"NC\", label: \"New Caledonia\" },\n    { value: \"NZ\", label: \"New Zealand\" },\n    { value: \"NI\", label: \"Nicaragua\" },\n    { value: \"NE\", label: \"Niger\" },\n    { value: \"NG\", label: \"Nigeria\" },\n    { value: \"NU\", label: \"Niue\" },\n    { value: \"NF\", label: \"Norfolk Island\" },\n    { value: \"KP\", label: \"North Korea\" },\n    { value: \"MP\", label: \"Northern Mariana Islands\" },\n    { value: \"NO\", label: \"Norway\" },\n    { value: \"OM\", label: \"Oman\" },\n    { value: \"PK\", label: \"Pakistan\" },\n    { value: \"PW\", label: \"Palau\" },\n    { value: \"PS\", label: \"Palestinian Territory\" },\n    { value: \"PA\", label: \"Panama\" },\n    { value: \"PG\", label: \"Papua New Guinea\" },\n    { value: \"PY\", label: \"Paraguay\" },\n    { value: \"PE\", label: \"Peru\" },\n    { value: \"PH\", label: \"Philippines\" },\n    { value: \"PN\", label: \"Pitcairn\" },\n    { value: \"PL\", label: \"Poland\" },\n    { value: \"PT\", label: \"Portugal\" },\n    { value: \"PR\", label: \"Puerto Rico\" },\n    { value: \"QA\", label: \"Qatar\" },\n    { value: \"RE\", label: \"Reunion\" },\n    { value: \"RO\", label: \"Romania\" },\n    { value: \"RU\", label: \"Russia\" },\n    { value: \"RW\", label: \"Rwanda\" },\n    { value: \"BL\", label: \"Saint Barthélemy\" },\n    { value: \"SH\", label: \"Saint Helena\" },\n    { value: \"KN\", label: \"Saint Kitts and Nevis\" },\n    { value: \"LC\", label: \"Saint Lucia\" },\n    { value: \"MF\", label: \"Saint Martin (French part)\" },\n    { value: \"PM\", label: \"Saint Pierre and Miquelon\" },\n    { value: \"VC\", label: \"Saint Vincent and the Grenadines\" },\n    { value: \"WS\", label: \"Samoa\" },\n    { value: \"SM\", label: \"San Marino\" },\n    { value: \"ST\", label: \"Sao Tome and Principe\" },\n    { value: \"SA\", label: \"Saudi Arabia\" },\n    { value: \"SN\", label: \"Senegal\" },\n    { value: \"RS\", label: \"Serbia\" },\n    { value: \"SC\", label: \"Seychelles\" },\n    { value: \"SL\", label: \"Sierra Leone\" },\n    { value: \"SG\", label: \"Singapore\" },\n    { value: \"SX\", label: \"Sint Maarten\" },\n    { value: \"SK\", label: \"Slovakia\" },\n    { value: \"SI\", label: \"Slovenia\" },\n    { value: \"SB\", label: \"Solomon Islands\" },\n    { value: \"SO\", label: \"Somalia\" },\n    { value: \"ZA\", label: \"South Africa\" },\n    { value: \"GS\", label: \"South Georgia and the South Sandwich Islands\" },\n    { value: \"KR\", label: \"South Korea\" },\n    { value: \"SS\", label: \"South Sudan\" },\n    { value: \"ES\", label: \"Spain\" },\n    { value: \"LK\", label: \"Sri Lanka\" },\n    { value: \"SD\", label: \"Sudan\" },\n    { value: \"SR\", label: \"Suriname\" },\n    { value: \"SJ\", label: \"Svalbard and Jan Mayen\" },\n    { value: \"SZ\", label: \"Swaziland\" },\n    { value: \"SE\", label: \"Sweden\" },\n    { value: \"CH\", label: \"Switzerland\" },\n    { value: \"SY\", label: \"Syria\" },\n    { value: \"TW\", label: \"Taiwan\" },\n    { value: \"TJ\", label: \"Tajikistan\" },\n    { value: \"TZ\", label: \"Tanzania\" },\n    { value: \"TH\", label: \"Thailand\" },\n    { value: \"TL\", label: \"Timor-Leste\" },\n    { value: \"TG\", label: \"Togo\" },\n    { value: \"TK\", label: \"Tokelau\" },\n    { value: \"TO\", label: \"Tonga\" },\n    { value: \"TT\", label: \"Trinidad and Tobago\" },\n    { value: \"TN\", label: \"Tunisia\" },\n    { value: \"TR\", label: \"Turkey\" },\n    { value: \"TM\", label: \"Turkmenistan\" },\n    { value: \"TC\", label: \"Turks and Caicos Islands\" },\n    { value: \"TV\", label: \"Tuvalu\" },\n    { value: \"VI\", label: \"U.S. Virgin Islands\" },\n    { value: \"UG\", label: \"Uganda\" },\n    { value: \"UA\", label: \"Ukraine\" },\n    { value: \"AE\", label: \"United Arab Emirates\" },\n    { value: \"GB\", label: \"United Kingdom\" },\n    { value: \"US\", label: \"United States\" },\n    { value: \"UM\", label: \"United States Minor Outlying Islands\" },\n    { value: \"UY\", label: \"Uruguay\" },\n    { value: \"UZ\", label: \"Uzbekistan\" },\n    { value: \"VU\", label: \"Vanuatu\" },\n    { value: \"VA\", label: \"Vatican\" },\n    { value: \"VE\", label: \"Venezuela\" },\n    { value: \"VN\", label: \"Vietnam\" },\n    { value: \"WF\", label: \"Wallis and Futuna\" },\n    { value: \"EH\", label: \"Western Sahara\" },\n    { value: \"YE\", label: \"Yemen\" },\n    { value: \"ZM\", label: \"Zambia\" },\n    { value: \"ZW\", label: \"Zimbabwe\" }\n  ];\n};\n\nexport const getCountryName = (code) => {\n  return getCountries().filter(item => item.value === code)[0].label;\n}\n\nexport const getMonths = () => {\n  const arr =  Array.apply(0, Array(12)).map(function(val,i) { return { value: i+1, label: i+1}; })\n  return arr\n};\n\nexport const getYears = () => {\n  const y = (new Date()).getFullYear();\n  const arr =  Array.apply(0, Array(10)).map(function(val,i) { return { value: i+y, label: (y+i).toString() };});\n  return arr\n};\n\nexport const getTitles = () => {\n  return [\n    { label: \"Mr\", value: \"Mr\" },\n    { label: \"Ms\", value: \"Ms\" },\n    { label: \"Mrs\", value: \"Mrs\" }\n  ];\n};\n\nexport const getSectionTitles = {\n  StepA: {\n    stepTitle: \"Enter your details\",\n    subTitle: \"\"\n  },\n\n  StepB: {\n    stepTitle: \"Select Destination and dates\",\n    subTitle: \"\"\n  },\n\n  StepC: {\n    stepTitle: \"Contact details\",\n    subTitle: \"\"\n  },\n\n  StepD: {\n    stepTitle: \"Payment Details\",\n    subTitle: \"\"\n  },\n\n  StepE: {\n    stepTitle: \"Congratulations\",\n    subTitle: \"Your booking is confirmed\"\n  }\n};\n"],"sourceRoot":""}